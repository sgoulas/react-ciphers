{"version":3,"sources":["components/Page/Page.js","utils/withErrorHandling.js","utils/useCipherCard.js","Context/TextContext.js","components/CipherCard/styles.js","components/CipherCard/CipherCard.js","Ciphers/hill.js","components/CipherCards/dataModel.js","Ciphers/atbash.js","Ciphers/base64.js","Ciphers/caesar.js","Ciphers/fourSquare.js","Ciphers/railFence.js","Ciphers/rot13.js","components/CipherCards/CipherCards.js","components/TextInput/TextInput.js","components/Jumbotron/styles.js","components/Jumbotron/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["styleObj","height","Page","props","Container","maxWidth","style","children","withErrorHandling","textFunction","text","outputText","hasShift","Object","prototype","hasOwnProperty","call","containsSingleKey","containsTwoKeys","cipherShift","key_1","key_2","error","message","useCipherCard","encrypt","decrypt","shift","keyGenerator","numberOfKeys","useState","encryptedText","setEncryptedText","decryptedText","setDecryptedText","showDecryption","setShowDecryption","showDescription","setShowDescription","Math","floor","random","setCipherShift","setKey_1","setKey_2","cipherSpecificProps","generateFirstKey","generateSecondKey","toggleDecryptedText","toggleDescription","copyEncryptedText","copy","toast","info","rollShift","randomShift","useEffect","newEncryptedText","newDecryptedText","TextContext","createContext","TextProvider","Provider","Consumer","theme","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","useStyles","makeStyles","root","width","minWidth","backgroundColor","color","cardContent","up","title","fontSize","description","encrypted","textOverflow","overflowX","key","CipherCard","name","classes","useContext","Typography","className","gutterBottom","cardHeaderAction","Grid","container","direction","justify","alignItems","item","IconButton","onClick","itemScope","shiftAction","variant","keysAction","Card","CardHeader","action","CardContent","paragraph","CardActions","randomTwoDigitNum","ciphers","plainText","input","plaintext","toLowerCase","length","ciphertext","regex","i","test","charAt","charCodeAt","atbash","codedText","re","String","fromCharCode","indexOf","btoa","atob","caesar","replace","k1","k2","alphabet","a","b","parseInt","c","d","toUpperCase","fourSquare","rt","chars","split","lim","index","splice","keys","hill","det","di","ikeys","Array","i00","i01","j00","j01","isInvertible","line","skip","j","railFence","pt","k","join","rot13","CipherCards","spacing","map","cipher","CssTextField","withStyles","borderBottomColor","borderColor","TextField","display","flexWrap","margin","TextInput","setText","label","id","value","onChange","event","target","padding","subTitle","Jumbotron","App","toastContainer","position","autoClose","transition","Slide","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9ed46f66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst styleObj = {\r\n  height: \"80vh\",\r\n};\r\n\r\nconst Page = (props) => {\r\n  return (\r\n    <Container maxWidth={false} style={styleObj}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","/**\r\n * @param {function} textFunction the function to run @param text\r\n * @param {string} text the text to be run against the @param function\r\n * @param {object} props the cipher specific props like key, shifts, etc\r\n *\r\n * @returns the output of the @param textFunction for the given input @param test or the error.message if it failed\r\n */\r\nconst withErrorHandling = (textFunction, text, props) => {\r\n  let outputText = \"\";\r\n  const hasShift = Object.prototype.hasOwnProperty.call(props, \"cipherShift\");\r\n  const containsSingleKey = Object.prototype.hasOwnProperty.call(\r\n    props,\r\n    \"key_1\"\r\n  );\r\n  const containsTwoKeys =\r\n    containsSingleKey && Object.prototype.hasOwnProperty.call(props, \"key_2\");\r\n\r\n  try {\r\n    if (hasShift) {\r\n      const { cipherShift } = props;\r\n      outputText = textFunction(text, cipherShift);\r\n    } else if (containsTwoKeys) {\r\n      const { key_1, key_2 } = props;\r\n      outputText = textFunction(text, key_1, key_2);\r\n    } else if (containsSingleKey) {\r\n      const { key_1 } = props;\r\n      outputText = textFunction(text, key_1);\r\n    } else {\r\n      outputText = textFunction(text);\r\n    }\r\n  } catch (error) {\r\n    outputText = error.message;\r\n  }\r\n\r\n  return outputText;\r\n};\r\n\r\nexport default withErrorHandling;\r\n","import { useState, useEffect } from \"react\";\r\nimport withErrorHandling from \"./withErrorHandling\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport copy from \"copy-to-clipboard\";\r\n\r\nconst useCipherCard = (\r\n  text,\r\n  encrypt,\r\n  decrypt,\r\n  shift = false,\r\n  keyGenerator,\r\n  numberOfKeys\r\n) => {\r\n  const [encryptedText, setEncryptedText] = useState(\"Encrypted text\");\r\n  const [decryptedText, setDecryptedText] = useState(\"Encrypted text\");\r\n  const [showDecryption, setShowDecryption] = useState(false);\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const [cipherShift, setCipherShift] = useState(\r\n    shift ? Math.floor(Math.random() * 26) : 0\r\n  );\r\n  const [key_1, setKey_1] = useState(numberOfKeys > 0 ? keyGenerator() : \"\");\r\n  const [key_2, setKey_2] = useState(numberOfKeys > 1 ? keyGenerator() : \"\");\r\n\r\n  const cipherSpecificProps = {\r\n    ...(shift && {\r\n      cipherShift,\r\n    }),\r\n    ...(numberOfKeys === 1 && {\r\n      key_1,\r\n    }),\r\n    ...(numberOfKeys === 2 && {\r\n      key_1,\r\n      key_2,\r\n    }),\r\n  };\r\n\r\n  const generateFirstKey = () => setKey_1(keyGenerator());\r\n  const generateSecondKey = () => setKey_2(keyGenerator());\r\n  const toggleDecryptedText = () => setShowDecryption(!showDecryption);\r\n  const toggleDescription = () => setShowDescription(!showDescription);\r\n  const copyEncryptedText = () => {\r\n    copy(encryptedText);\r\n    toast.info(\"Copied to clipboard!\");\r\n  };\r\n\r\n  const rollShift = () => {\r\n    const randomShift = Math.floor(Math.random() * 26);\r\n    setCipherShift(randomShift);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newEncryptedText = text\r\n      ? withErrorHandling(encrypt, text, cipherSpecificProps)\r\n      : \"Encrypted text\";\r\n    setEncryptedText(newEncryptedText);\r\n  }, [encrypt, text, cipherSpecificProps]);\r\n\r\n  useEffect(() => {\r\n    const newDecryptedText =\r\n      encryptedText === \"Encrypted text\"\r\n        ? \"Encrypted text\"\r\n        : withErrorHandling(decrypt, encryptedText, cipherSpecificProps);\r\n    setDecryptedText(newDecryptedText);\r\n  }, [decrypt, encryptedText, cipherSpecificProps]);\r\n\r\n  return {\r\n    encryptedText,\r\n    decryptedText,\r\n    cipherShift,\r\n    showDescription,\r\n    showDecryption,\r\n    key_1,\r\n    key_2,\r\n    rollShift,\r\n    toggleDecryptedText,\r\n    toggleDescription,\r\n    generateFirstKey,\r\n    generateSecondKey,\r\n    copyEncryptedText,\r\n  };\r\n};\r\n\r\nexport default useCipherCard;\r\n","import { createContext } from \"react\";\r\n\r\nconst TextContext = createContext(\"\");\r\n\r\nexport const TextProvider = TextContext.Provider;\r\nexport const TextConsumer = TextContext.Consumer;\r\n\r\nexport default TextContext;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"auto\",\r\n    minWidth: 250,\r\n    height: 270,\r\n    backgroundColor: \"#2A9D8F\",\r\n    color: \"#fff\",\r\n  },\r\n  cardContent: {\r\n    [theme.breakpoints.up(\"xl\")]: {\r\n      width: 700,\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    color: \"#264653\",\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    color: \"#264653\",\r\n  },\r\n  encrypted: {\r\n    minWidth: 50,\r\n    fontSize: 28,\r\n    color: \"#E9C46A\",\r\n    textOverflow: \"ellipsis\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  shift: {\r\n    color: \"#264653\",\r\n  },\r\n  key: {\r\n    color: \"#264653\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport CasinoOutlinedIcon from \"@material-ui/icons/CasinoOutlined\";\r\nimport useCipherCard from \"../../utils/useCipherCard\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport TextContext from \"../../Context/TextContext\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst CipherCard = ({\r\n  name,\r\n  description,\r\n  encrypt,\r\n  decrypt,\r\n  shift = false,\r\n  keyGenerator,\r\n  numberOfKeys = 0,\r\n}) => {\r\n  const classes = useStyles();\r\n  const text = useContext(TextContext);\r\n  const {\r\n    encryptedText,\r\n    decryptedText,\r\n    cipherShift,\r\n    showDescription,\r\n    showDecryption,\r\n    key_1,\r\n    key_2,\r\n    rollShift,\r\n    toggleDecryptedText,\r\n    toggleDescription,\r\n    generateFirstKey,\r\n    generateSecondKey,\r\n    copyEncryptedText,\r\n  } = useCipherCard(text, encrypt, decrypt, shift, keyGenerator, numberOfKeys);\r\n\r\n  const title = (\r\n    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n      {name}\r\n    </Typography>\r\n  );\r\n\r\n  const cardHeaderAction = (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      <Grid item>\r\n        <IconButton onClick={toggleDecryptedText}>\r\n          {showDescription ? null : showDecryption ? (\r\n            <LockOpenIcon />\r\n          ) : (\r\n            <LockIcon />\r\n          )}\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid itemScope>\r\n        <IconButton onClick={copyEncryptedText}>\r\n          {showDescription ? null : <FileCopyIcon />}\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton onClick={toggleDescription}>\r\n          {showDescription ? <KeyboardReturnIcon /> : <HelpOutlineIcon />}\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const shiftAction = shift && (\r\n    <>\r\n      <IconButton onClick={rollShift}>\r\n        <CasinoOutlinedIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" className={classes.shift}>\r\n        {cipherShift}\r\n      </Typography>\r\n    </>\r\n  );\r\n\r\n  const keysAction = keyGenerator && (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"flex-start\">\r\n      <Grid item xs={12}>\r\n        <IconButton onClick={generateFirstKey}>\r\n          <VpnKeyIcon />\r\n        </IconButton>\r\n        <Typography variant=\"inherit\" className={classes.key}>\r\n          {key_1}\r\n        </Typography>\r\n      </Grid>\r\n      {numberOfKeys === 2 && (\r\n        <Grid item xs={12}>\r\n          <IconButton onClick={generateSecondKey}>\r\n            <VpnKeyIcon />\r\n          </IconButton>\r\n          <Typography variant=\"inherit\" className={classes.key}>\r\n            {key_2}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader action={cardHeaderAction} title={title} />\r\n      <CardContent className={classes.cardContent}>\r\n        {showDescription ? (\r\n          <Typography paragraph className={classes.description}>\r\n            {description}\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h5\" className={classes.encrypted}>\r\n            {showDecryption ? decryptedText : encryptedText}\r\n          </Typography>\r\n        )}\r\n      </CardContent>\r\n      {showDescription ? null : (\r\n        <CardActions>\r\n          {shiftAction}\r\n          {keysAction}\r\n        </CardActions>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CipherCard;\r\n","const randomTwoDigitNum = () => Math.floor(Math.random() * 99);\r\n\r\n/**\r\n * returns a string containg a flat random 2x2 inversible matrix as a key\r\n *\r\n * |i00 j00|\r\n * |i01 j01|\r\n */\r\nexport const GenRandKey = () => {\r\n  let i00,\r\n    i01,\r\n    j00,\r\n    j01 = 0;\r\n  let isInvertible = false;\r\n  do {\r\n    i00 = randomTwoDigitNum();\r\n    i01 = randomTwoDigitNum();\r\n    j00 = randomTwoDigitNum();\r\n    j01 = randomTwoDigitNum();\r\n    isInvertible = i00 * j01 - i01 * j00 !== 0;\r\n  } while (!isInvertible);\r\n\r\n  return `${i00} ${i01} ${j00} ${j01}`;\r\n};\r\n\r\nexport const Encrypt = (input, key) => {\r\n  let ciphertext = \"\";\r\n  let plaintext = input.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  let k = key.toLowerCase().replace(/[^0-9 ]/g, \"\");\r\n  const keys = k.split(\" \");\r\n  // do some error checking\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  if (plaintext.length % 2 === 1) {\r\n    plaintext = plaintext + \"x\";\r\n  }\r\n  if (keys.length !== 4) {\r\n    return \"key should consist of 4 integers\";\r\n  }\r\n  for (let i = 0; i < 4; i++) keys[i] = keys[i] % 26;\r\n  ciphertext = \"\";\r\n  for (let i = 0; i < plaintext.length; i += 2) {\r\n    ciphertext += String.fromCharCode(\r\n      ((keys[0] * (plaintext.charCodeAt(i) - 97) +\r\n        keys[1] * (plaintext.charCodeAt(i + 1) - 97)) %\r\n        26) +\r\n        97\r\n    );\r\n    ciphertext += String.fromCharCode(\r\n      ((keys[2] * (plaintext.charCodeAt(i) - 97) +\r\n        keys[3] * (plaintext.charCodeAt(i + 1) - 97)) %\r\n        26) +\r\n        97\r\n    );\r\n  }\r\n  return ciphertext;\r\n};\r\n\r\nexport const Decrypt = (encryptedText, key) => {\r\n  let ciphertext = encryptedText.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  let k = key.replace(/[^0-9 ]/g, \"\");\r\n  let keys = k.split(\" \");\r\n  // do some error checking\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some ciphertext (letters only, numbers should be spelled)\";\r\n  }\r\n  if (ciphertext.length % 2 === 1) {\r\n    return \"ciphertext is not divisible by 2 (wrong algorithm?)\";\r\n  }\r\n  if (keys.length !== 4) {\r\n    return \"key should consist of 4 integers\";\r\n  }\r\n  for (let i = 0; i < 4; i++) keys[i] = keys[i] % 26;\r\n  // calc inv matrix\r\n  let det = keys[0] * keys[3] - keys[1] * keys[2];\r\n  det = ((det % 26) + 26) % 26;\r\n  let di = 0;\r\n  for (let i = 0; i < 26; i++) {\r\n    if ((det * i) % 26 === 1) di = i;\r\n  }\r\n  if (di === 0) {\r\n    return \"could not invert, try different key\";\r\n  }\r\n  let ikeys = new Array(4);\r\n  ikeys[0] = (di * keys[3]) % 26;\r\n  ikeys[1] = (-1 * di * keys[1]) % 26;\r\n  ikeys[2] = (-1 * di * keys[2]) % 26;\r\n  ikeys[3] = di * keys[0];\r\n  for (let i = 0; i < 4; i++) {\r\n    if (ikeys[i] < 0) ikeys[i] += 26;\r\n  }\r\n  let plaintext = \"\";\r\n  for (let i = 0; i < ciphertext.length; i += 2) {\r\n    plaintext += String.fromCharCode(\r\n      ((ikeys[0] * (ciphertext.charCodeAt(i) - 97) +\r\n        ikeys[1] * (ciphertext.charCodeAt(i + 1) - 97)) %\r\n        26) +\r\n        97\r\n    );\r\n    plaintext += String.fromCharCode(\r\n      ((ikeys[2] * (ciphertext.charCodeAt(i) - 97) +\r\n        ikeys[3] * (ciphertext.charCodeAt(i + 1) - 97)) %\r\n        26) +\r\n        97\r\n    );\r\n  }\r\n  return plaintext;\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/hill/\r\n// 5 17 4 15 key\r\n","import * as atbash from \"../../Ciphers/atbash\";\r\nimport * as base64 from \"../../Ciphers/base64\";\r\nimport * as caesar from \"../../Ciphers/caesar\";\r\nimport * as fourSquare from \"../../Ciphers/fourSquare\";\r\nimport * as hill from \"../../Ciphers/hill\";\r\nimport * as railFence from \"../../Ciphers/railFence\";\r\nimport * as rot13 from \"../../Ciphers/rot13\";\r\n\r\nconst ciphers = [\r\n  {\r\n    name: \"Atbash\",\r\n    description:\r\n      'A substitution cipher where the letters of the alphabet are reversed based on a predefined key. In this case it is \"ZYXWVUTSRQPONMLKJIHGFEDCBA\"',\r\n    encrypt: (plainText) => atbash.Encrypt(plainText),\r\n    decrypt: (codedText) => atbash.Decrypt(codedText),\r\n  },\r\n  {\r\n    name: \"Base64\",\r\n    description:\r\n      'Not technically a cipher but widely used to encode binary information.\\n It uses the built in functions \"btoa\" and \"atob\" to encrypt / decrypt the input.',\r\n    encrypt: (plainText) => base64.Encrypt(plainText),\r\n    decrypt: (codedText) => base64.Decrypt(codedText),\r\n  },\r\n  {\r\n    name: \"Caesar\",\r\n    description:\r\n      \"A substitution cipher in which each letter is 'shifted' down the alphabet based on a shift value.\",\r\n    encrypt: (plainText, shift) => caesar.Encrypt(plainText, shift),\r\n    decrypt: (codedText, shift) => caesar.Decrypt(codedText, shift),\r\n    shift: true,\r\n  },\r\n  {\r\n    name: \"Four square\",\r\n    description:\r\n      \"The four-square cipher uses four 5 by 5 matrices of random letters arranged in a square to encrypt pairs of letters, which makes it significantly stronger than substitution ciphers.\",\r\n    encrypt: (plainText, key_1, key_2) =>\r\n      fourSquare.Encrypt(plainText, key_1, key_2),\r\n    decrypt: (codedText, key_1, key_2) =>\r\n      fourSquare.Decrypt(codedText, key_1, key_2),\r\n    keyGenerator: fourSquare.GenRandKey,\r\n    numberOfKeys: 2,\r\n  },\r\n  {\r\n    name: \"Hill\",\r\n    description:\r\n      \"Invented by Lester S. Hill in 1929, the Hill cipher is a polygraphic substitution cipher based on linear algebra. Hill used matrices and matrix multiplication to mix up the plaintext. The cipher key is an inversible matrix (in this case a 2 by 2 one).\",\r\n    encrypt: (plainText, key) => hill.Encrypt(plainText, key),\r\n    decrypt: (codedText, key) => hill.Decrypt(codedText, key),\r\n    keyGenerator: hill.GenRandKey,\r\n    numberOfKeys: 1,\r\n  },\r\n  {\r\n    name: \"Rail Fence\",\r\n    description:\r\n      \"A transposition cipher that follows a simple rule for mixing up the characters. Although weak on its own, it can be combined with other ciphers, the combination of which is harder to break than either on it's own.\",\r\n    encrypt: (plainText, key) => railFence.Encrypt(plainText, key),\r\n    decrypt: (codedText, key) => railFence.Decrypt(codedText, key),\r\n    keyGenerator: railFence.GenRandKey,\r\n    numberOfKeys: 1,\r\n  },\r\n  {\r\n    name: \"Rot13\",\r\n    description:\r\n      \"A substitution cipher with a specific key where the letters of the alphabet are offset 13 places. A more limited version of Caesar's cipher.\",\r\n    encrypt: (plainText) => rot13.Encrypt(plainText),\r\n    decrypt: (codedText) => rot13.Decrypt(codedText),\r\n  },\r\n];\r\n\r\nexport default ciphers;\r\n","export const Encrypt = (input) => {\r\n  const plaintext = input.toLowerCase();\r\n  const key = \"ZYXWVUTSRQPONMLKJIHGFEDCBA\".toLowerCase();\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  let ciphertext = \"\";\r\n  let regex = /[a-z]/;\r\n  for (let i = 0; i < plaintext.length; i++) {\r\n    if (regex.test(plaintext.charAt(i)))\r\n      ciphertext += key.charAt(plaintext.charCodeAt(i) - 97);\r\n    else ciphertext += plaintext.charAt(i);\r\n  }\r\n\r\n  return ciphertext;\r\n};\r\n\r\nexport const Decrypt = (input) => {\r\n  let ciphertext = input.toLowerCase();\r\n  let key = \"ZYXWVUTSRQPONMLKJIHGFEDCBA\".toLowerCase();\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some ciphertext (letters only)\";\r\n  }\r\n  let plaintext = \"\";\r\n  const re = /[a-z]/;\r\n  for (let i = 0; i < ciphertext.length; i++) {\r\n    if (re.test(ciphertext.charAt(i)))\r\n      plaintext += String.fromCharCode(key.indexOf(ciphertext.charAt(i)) + 97);\r\n    else plaintext += ciphertext.charAt(i);\r\n  }\r\n  return plaintext;\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/atbash-cipher/\r\n","export const Encrypt = (input) => {\r\n  return btoa(input);\r\n};\r\n\r\nexport const Decrypt = (input) => {\r\n  return atob(input);\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/base64/\r\n","export const Encrypt = (input, shift) => {\r\n  const plaintext = input.toLowerCase();\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  let ciphertext = \"\";\r\n  var regex = /[a-z]/;\r\n  for (let i = 0; i < plaintext.length; i++) {\r\n    if (regex.test(plaintext.charAt(i)))\r\n      ciphertext += String.fromCharCode(\r\n        ((plaintext.charCodeAt(i) - 97 + shift) % 26) + 97\r\n      );\r\n    else ciphertext += plaintext.charAt(i);\r\n  }\r\n  return ciphertext;\r\n};\r\n\r\nexport const Decrypt = (input, shift) => {\r\n  let ciphertext = input.toLowerCase();\r\n  // do some error checking\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some ciphertext (letters only)\";\r\n  }\r\n  let plaintext = \"\";\r\n  var re = /[a-z]/;\r\n  for (let i = 0; i < ciphertext.length; i++) {\r\n    if (re.test(ciphertext.charAt(i)))\r\n      plaintext += String.fromCharCode(\r\n        ((ciphertext.charCodeAt(i) - 97 + 26 - shift) % 26) + 97\r\n      );\r\n    else plaintext += ciphertext.charAt(i);\r\n  }\r\n  return plaintext;\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/caesar/\r\n","export const Encrypt = (input, key_1, key_2) => {\r\n  let ciphertext = \"\";\r\n  let plaintext = input\r\n    .toLowerCase()\r\n    .replace(/[^a-z]/g, \"\")\r\n    .replace(/[j]/g, \"i\");\r\n  const k1 = key_1.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  const k2 = key_2.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  // do some error checking\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  if (k1.length !== 25 || k2.length !== 25) {\r\n    return \"keysquare must be 25 characters in length\";\r\n  }\r\n  if (plaintext.length % 2 === 1) plaintext += \"x\";\r\n  ciphertext = \"\";\r\n  const alphabet = \"abcdefghiklmnopqrstuvwxyz\";\r\n  for (let i = 0; i < plaintext.length; i += 2) {\r\n    const a = alphabet.indexOf(plaintext.charAt(i)) % 5;\r\n    const b = parseInt(alphabet.indexOf(plaintext.charAt(i)) / 5);\r\n    const c = alphabet.indexOf(plaintext.charAt(i + 1)) % 5;\r\n    const d = parseInt(alphabet.indexOf(plaintext.charAt(i + 1)) / 5);\r\n    ciphertext += k1.charAt(5 * b + c);\r\n    ciphertext += k2.charAt(5 * d + a);\r\n  }\r\n  return ciphertext.toUpperCase();\r\n};\r\n\r\nexport const GenRandKey = () => {\r\n  const keychars = \"abcdefghiklmnopqrstuvwxyz\";\r\n  const chars = keychars.split(\"\");\r\n  let key = \"\";\r\n  const lim = chars.length;\r\n  for (let i = 0; i < lim; i++) {\r\n    let index = Math.floor(chars.length * Math.random());\r\n    key += chars[index];\r\n    chars.splice(index, 1);\r\n  }\r\n\r\n  return key.toUpperCase();\r\n};\r\n\r\nexport const Decrypt = (encryptedText, key_1, key_2) => {\r\n  let ciphertext = encryptedText\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9]/g, \"\")\r\n    .replace(/[j]/g, \"i\");\r\n  let k1 = key_1.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  let k2 = key_2.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  // do some error checking\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  if (k1.length !== 25 || k2.length !== 25) {\r\n    return \"keysquare must be 25 characters in length\";\r\n  }\r\n  if (ciphertext.length % 2 === 1) {\r\n    return \"ciphertext should be even length (wrong algorithm?)\";\r\n  }\r\n  let plaintext = \"\";\r\n  let rt = \"abcdefghiklmnopqrstuvwxyz\";\r\n  for (let i = 0; i < ciphertext.length; i += 2) {\r\n    let a = k1.indexOf(ciphertext.charAt(i)) % 5;\r\n    let b = parseInt(k1.indexOf(ciphertext.charAt(i)) / 5);\r\n    let c = k2.indexOf(ciphertext.charAt(i + 1)) % 5;\r\n    let d = parseInt(k2.indexOf(ciphertext.charAt(i + 1)) / 5);\r\n    plaintext += rt.charAt(5 * b + c);\r\n    plaintext += rt.charAt(5 * d + a);\r\n  }\r\n  return plaintext.toLowerCase();\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/four-square/\r\n","export const GenRandKey = () => Math.floor(Math.random() * 9) + 1;\r\n\r\nexport const Encrypt = (input, key) => {\r\n  const plaintext = input.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  let ciphertext = \"\";\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  if (key > Math.floor(2 * (plaintext.length - 1))) {\r\n    return \"key is too large for the plaintext length.\";\r\n  }\r\n  if (key === 1) ciphertext = plaintext;\r\n  else {\r\n    ciphertext = \"\";\r\n    let line;\r\n    for (line = 0; line < key - 1; line++) {\r\n      let skip = 2 * (key - line - 1);\r\n      let j = 0;\r\n      for (let i = line; i < plaintext.length; ) {\r\n        ciphertext += plaintext.charAt(i);\r\n        if (line === 0 || j % 2 === 0) i += skip;\r\n        else i += 2 * (key - 1) - skip;\r\n        j++;\r\n      }\r\n    }\r\n    for (let i = line; i < plaintext.length; i += 2 * (key - 1))\r\n      ciphertext += plaintext.charAt(i);\r\n  }\r\n  return ciphertext;\r\n};\r\n\r\nexport const Decrypt = (encryptedText, key) => {\r\n  const ciphertext = encryptedText.toLowerCase().replace(/[^a-z]/g, \"\");\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some ciphertext (letters only)\";\r\n  }\r\n  if (key > Math.floor(2 * (ciphertext.length - 1))) {\r\n    return \"key is too large for the ciphertext length.\";\r\n  }\r\n  if (key === 1) {\r\n    return ciphertext;\r\n  } else {\r\n    let pt = new Array(ciphertext.length);\r\n    let k = 0;\r\n    let line;\r\n    for (line = 0; line < key - 1; line++) {\r\n      let skip = 2 * (key - line - 1);\r\n      let j = 0;\r\n      for (let i = line; i < ciphertext.length; ) {\r\n        pt[i] = ciphertext.charAt(k++);\r\n        if (line === 0 || j % 2 === 0) i += skip;\r\n        else i += 2 * (key - 1) - skip;\r\n        j++;\r\n      }\r\n    }\r\n    for (let i = line; i < ciphertext.length; i += 2 * (key - 1)) {\r\n      pt[i] = ciphertext.charAt(k++);\r\n    }\r\n\r\n    return pt.join(\"\");\r\n  }\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/rail-fence/\r\n// key 3\r\n","export const Encrypt = (input) => {\r\n  const plaintext = input.toLowerCase();\r\n  if (plaintext.length < 1) {\r\n    return \"please enter some plaintext\";\r\n  }\r\n  const shift = 13;\r\n  let ciphertext = \"\";\r\n  const regex = /[a-z]/;\r\n  for (let i = 0; i < plaintext.length; i++) {\r\n    if (regex.test(plaintext.charAt(i)))\r\n      ciphertext += String.fromCharCode(\r\n        ((plaintext.charCodeAt(i) - 97 + shift) % 26) + 97\r\n      );\r\n    else ciphertext += plaintext.charAt(i);\r\n  }\r\n  return ciphertext;\r\n};\r\n\r\nexport const Decrypt = (encryptedText) => {\r\n  const ciphertext = encryptedText.toLowerCase();\r\n  // do some error checking\r\n  if (ciphertext.length < 1) {\r\n    return \"please enter some ciphertext (letters only)\";\r\n  }\r\n  const shift = 13;\r\n  let plaintext = \"\";\r\n  var re = /[a-z]/;\r\n  for (let i = 0; i < ciphertext.length; i++) {\r\n    if (re.test(ciphertext.charAt(i)))\r\n      plaintext += String.fromCharCode(\r\n        ((ciphertext.charCodeAt(i) - 97 + 26 - shift) % 26) + 97\r\n      );\r\n    else plaintext += ciphertext.charAt(i);\r\n  }\r\n  return plaintext;\r\n};\r\n\r\n// http://practicalcryptography.com/ciphers/classical-era/rot13/\r\n","import React from \"react\";\r\nimport CipherCard from \"../CipherCard/CipherCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ciphers from \"./dataModel\";\r\n\r\nconst CipherCards = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={3}\r\n    >\r\n      {ciphers.map((cipher) => {\r\n        return (\r\n          <Grid item key={cipher.name} xl={4} lg={4} md={6} sm={6} xs={12}>\r\n            <CipherCard {...cipher} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CipherCards;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    width: 450,\r\n    \"& label.Mui-focused\": {\r\n      color: \"#264653\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#264653\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#264653\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#E76F51\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#E76F51\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst TextInput = (props) => {\r\n  const { text, setText } = props;\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setText(value);\r\n  };\r\n\r\n  return (\r\n    <CssTextField\r\n      className={classes.margin}\r\n      label=\"Start typing\"\r\n      id=\"custom-css-outlined-input\"\r\n      value={text}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"20vh\",\r\n    backgroundColor: \"#F4A261\",\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    fontSize: 68,\r\n  },\r\n  subTitle: {\r\n    fontSize: 22,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Jumbotron = () => {\r\n  const classes = useStyles();\r\n  const title = (\r\n    <Typography className={classes.title}> React Ciphers</Typography>\r\n  );\r\n  const subTitle = (\r\n    <Typography className={classes.subTitle}>\r\n      A collection of dynamic examples\r\n    </Typography>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.root}\r\n    >\r\n      <Grid item>{title}</Grid>\r\n      <Grid item>{subTitle}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","import React, { useState } from \"react\";\r\nimport Page from \"./components/Page/Page\";\r\nimport CipherCards from \"./components/CipherCards/CipherCards\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextInput from \"./components/TextInput/TextInput\";\r\nimport { ToastContainer, Slide } from \"react-toastify\";\r\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\r\nimport { TextProvider } from \"./Context/TextContext\";\r\n\r\nconst App = () => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const toastContainer = (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={3000}\r\n      transition={Slide}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      {toastContainer}\r\n      <Jumbotron />\r\n      <Page>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <TextInput text={text} setText={setText} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextProvider value={text}>\r\n              <CipherCards />\r\n            </TextProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}